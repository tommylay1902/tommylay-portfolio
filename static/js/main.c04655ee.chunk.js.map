{"version":3,"sources":["components/SlideCard.js","components/NavBar/NavLinks.js","components/NavBar/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["styled","div","NavLinks","useState","isCollapsed","setIsCollapsed","activeIcon","useEffect","activate","el","List","ListElement","Link","href","onClick","src","ul","li","a","Navigation","NavContainer","Nav","nav","AppContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAOkBA,IAAOC,IAAV,0B,MCJFC,EAAW,WAAO,IAAD,EACUC,oBAAS,GADnB,mBACrBC,EADqB,KACRC,EADQ,OAEQF,mBAClC,+DAH0B,mBAErBG,EAFqB,UAK5BC,qBAAU,cAAU,IAEpB,IAAMC,EAAW,WACfH,GAAe,SAACI,GAAD,OAASA,MAE1B,OAAOL,EACL,cAACM,EAAD,UACE,cAACC,EAAD,UACE,cAACC,EAAD,CAAMC,KAAK,IAAIC,QAASN,EAAxB,SACE,qBAAKO,IAAKT,UAKhB,eAACI,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,CAAMC,KAAK,IAAIC,QAASN,EAAxB,SACE,qBAAKO,IAAI,oEAGb,cAACJ,EAAD,UACE,cAACC,EAAD,CAAMC,KAAK,IAAIC,QAASN,EAAxB,SACE,qBAAKO,IAAI,+DAGb,cAACJ,EAAD,UACE,cAACC,EAAD,CAAMC,KAAK,IAAIC,QAASN,EAAxB,SACE,qBAAKO,IAAI,4EAGb,cAACJ,EAAD,UACE,cAACC,EAAD,CAAMC,KAAK,IAAIC,QAASN,EAAxB,SACE,qBAAKO,IAAI,oEAObL,EAAOV,IAAOgB,GAAV,wEAKJL,EAAcX,IAAOiB,GAAV,+FAKXL,EAAOZ,IAAOkB,EAAV,iICrDGC,EAAa,WACxB,OACE,cAACC,EAAD,UACE,cAACC,EAAD,UACE,cAAC,EAAD,SAMFD,EAAepB,IAAOC,IAAV,yJASZoB,EAAMrB,IAAOsB,IAAV,0BCTT,IAAMC,EAAevB,IAAOC,IAAV,yEAKHuB,EAbf,WACE,OACE,cAACD,EAAD,UACE,cAAC,EAAD,OCGSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c04655ee.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const SlideCard = () => {\n  return <Container></Container>;\n};\n\nconst Container = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport const NavLinks = () => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [activeIcon, setActiveIcon] = useState(\n    \"https://img.icons8.com/material-rounded/125/000000/home.png\"\n  );\n  useEffect(() => {}, []);\n\n  const activate = () => {\n    setIsCollapsed((el) => !el);\n  };\n  return isCollapsed ? (\n    <List>\n      <ListElement>\n        <Link href=\"#\" onClick={activate}>\n          <img src={activeIcon} />\n        </Link>\n      </ListElement>\n    </List>\n  ) : (\n    <List>\n      <ListElement>\n        <Link href=\"#\" onClick={activate}>\n          <img src=\"https://img.icons8.com/material-rounded/125/000000/home.png\" />\n        </Link>\n      </ListElement>\n      <ListElement>\n        <Link href=\"#\" onClick={activate}>\n          <img src=\"https://img.icons8.com/ios-filled/110/000000/paper.png\" />\n        </Link>\n      </ListElement>\n      <ListElement>\n        <Link href=\"#\" onClick={activate}>\n          <img src=\"https://img.icons8.com/material-rounded/125/000000/linkedin--v1.png\" />\n        </Link>\n      </ListElement>\n      <ListElement>\n        <Link href=\"#\" onClick={activate}>\n          <img src=\"https://img.icons8.com/ios-glyphs/135/000000/github.png\" />\n        </Link>\n      </ListElement>\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  list-style: none;\n  padding-right: 8vw;\n`;\n\nconst ListElement = styled.li`\n  font-size: calc(16px + 1vw);\n  line-height: calc(2em + 0.5vw);\n`;\n\nconst Link = styled.a`\n  /* &:active {\n  }\n  &:visited {\n    color: white;\n  }\n  &:hover {\n    color: black;\n  } */\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { NavLinks } from \"./NavLinks\";\nimport styled from \"styled-components\";\n\nexport const Navigation = () => {\n  return (\n    <NavContainer>\n      <Nav>\n        <NavLinks></NavLinks>\n      </Nav>\n    </NavContainer>\n  );\n};\n\nconst NavContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: fixed;\n`;\n\nconst Nav = styled.nav``;\n","import \"./App.css\";\nimport { SlideCard } from \"./components/SlideCard\";\nimport { Navigation } from \"./components/NavBar/Navigation\";\n\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Navigation></Navigation>\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}